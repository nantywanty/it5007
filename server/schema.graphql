enum StatusType {
  Free
  Taken
}

type Booking {
  _id: ID!
  seat: Int!
  status: StatusType!
  name: String!
  phone: String!
  timestamp: String!
}

type Person {
  _id: ID!
  name: String!
  phone: String!
}

input BookingInputs {
  seat: Int!
  name: String
  phone: String
}

input PersonInputs {
  name: String
  phone: String
}

##### Top level declarations

type Query {
  about: String!
  bookingDetails: [Booking!]!
  blacklistDetails: [Person!]!
  bookingAddValidate: Booking!
  bookingDeleteValidate: Booking!
  blacklistAddValidate: Person!
  blacklistDeleteValidate: Person!
  checkBlacklist: Person!
}

type Mutation {
  setAboutMessage(message: String!): String
  bookingAdd(booking: BookingInputs!): Booking
  bookingDelete(booking: BookingInputs!): Booking
  blacklistAdd(person: PersonInputs!): Person
  blacklistDelete(person: PersonInputs!): Person
}
